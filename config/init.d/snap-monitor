#!/bin/bash
#
# Daemon Name: snap-monitor
#
# description: Script to monitor a build pipeline running snap-ci
# requires: ruby, usblamp

DAEMON_PATH="/var/lib/snap-monitor"
 
DAEMON="monitor.rb"
DAEMONOPTS=""

NAME="snap-monitor"
DESC="Script to monitor a build pipeline running snap-ci"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

start() {
    printf "%-50s" "Starting $NAME: "
    cd $DAEMON_PATH
    PID=`ruby $DAEMON $DAEMONOPTS > /dev/null 2>&1 & echo $!`
    if [ -z $PID ]; then
      printf "%s\n" "[Fail]"
    else
      echo $PID > $PIDFILE
      printf "%s\n" "[Ok]"
    fi
}

stop() {
   printf "%-50s" "Stopping $NAME"
   PID=`cat $PIDFILE`
   cd $DAEMON_PATH
   if [ -f $PIDFILE ]; then
     kill -HUP $PID
     printf "%s\n" "[Ok]"
     # ensure the lamp is off - kinda hacky to do this here
     usblamp off
     rm -f $PIDFILE
   else
     printf "%s\n" "pidfile not found"
   fi
}

status() {
  printf "%-50s" "Checking $NAME..."
  if [ -f $PIDFILE ]; then
    PID=`cat $PIDFILE`
    if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
      printf "%s\n" "Process dead but pidfile exists"
    else
      echo "Running"
    fi
  else
    printf "%s\n" "Service not running"
  fi
}

# See how we were called.
case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  status)
        status
        ;;
  restart)
        stop
        start
        ;;
   *)
        echo $"Usage: $0 {start|stop|status|restart}"
        exit 2
esac
